<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <version>1.4.0</version>
    <groupId>com.zoomdata</groupId>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>connector-server-cratedb</artifactId>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Copyright -->
        <inceptionYear>2012</inceptionYear>
        <currentYear>2017</currentYear>
        <copyrightOwner>Zoomdata, Inc.</copyrightOwner>
        <!-- Versions -->
        <connector-api.version>2.3.1</connector-api.version>
        <crate.jdbc.version>2.2.0</crate.jdbc.version>
        <query.dsl.version>4.1.4</query.dsl.version>
        <slf4j.version>1.7.22</slf4j.version>
        <logback.version>1.1.8</logback.version>
        <lombok.version>1.16.12</lombok.version>
        <thrift.version>0.9.3</thrift.version>
        <dbcp2.version>2.1.1</dbcp2.version>
        <!-- Additional versions for core things -->
        <spring.boot.version>1.4.3.RELEASE</spring.boot.version>
        <json.version>20160810</json.version>
        <joda.time.version>2.9.4</joda.time.version>
        <commons.lang.version>3.4</commons.lang.version>
        <guava.version>20.0</guava.version>
    </properties>

    <repositories>
        <!-- The Zoomdata Maven repository for getting generated Thrift classes -->
        <repository>
            <id>zoomdata-artifactory-libs</id>
            <name>zoomdata-artifactory-libs</name>
            <url>http://public-maven.zoomdata.com/artifactory/libs-release-local</url>
        </repository>
        <!-- Required for Crate DB -->
        <repository>
            <id>bintray-central</id>
            <name>bintray</name>
            <url>http://dl.bintray.com/crate/crate</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Crate DB JDBC drivers -->
        <dependency>
            <groupId>io.crate</groupId>
            <artifactId>crate-jdbc</artifactId>
            <version>${crate.jdbc.version}</version>
        </dependency>

        <!-- This is the library with thrift generated classes -->
        <dependency>
            <groupId>com.zoomdata</groupId>
            <artifactId>edc-api</artifactId>
            <version>${connector-api.version}</version>
        </dependency>

        <!-- Thrift library is needed for embedded servers -->
        <dependency>
            <groupId>org.apache.thrift</groupId>
            <artifactId>libthrift</artifactId>
            <version>${thrift.version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- Query DSL helps easily build SQL queries -->
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-core</artifactId>
            <version>${query.dsl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-sql</artifactId>
            <version>${query.dsl.version}</version>
        </dependency>

        <!-- Connection Pool -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>${dbcp2.version}</version>
        </dependency>

        <!-- Auto-generate getters, setters, constructors, etc. -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Not used directly by the CrateDB connector, but needed by Utils, etc. -->
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <!-- Jetty Embedded Server -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish</groupId>
                    <artifactId>javax.el</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda.time.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- Adding/Checking copyright header to source files -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.11</version>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>copyright</id>
                        <phase>validate</phase>
                        <goals>
                            <!-- <goal>format</goal> -->
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <!-- Template location -->
                            <header>${project.basedir}/copyright.txt</header>
                            <properties>
                                <!-- Values to be substituted in template -->
                                <h_inceptionYear>${inceptionYear}</h_inceptionYear>
                                <h_currentYear>${currentYear}</h_currentYear>
                                <h_copyrightOwner>${copyrightOwner}</h_copyrightOwner>
                            </properties>
                            <strictCheck>true</strictCheck>
                            <aggregate>true</aggregate>
                            <encoding>UTF-8</encoding>
                            <useDefaultExcludes>true</useDefaultExcludes>
                            <failIfMissing>true</failIfMissing>
                            <includes>
                                <include>**/*.java</include>
                                <include>*.sh</include>
                            </includes>
                            <excludes>
                                <exclude>**/src/main/gen/**</exclude>
                                <exclude>**sh</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- For running Spring Boot via Maven -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <mainClass>com.zoomdata.connector.example.framework.ConnectorServerMain</mainClass>
                    <jvmArguments>
                        -Duser.timezone=GMT
                    </jvmArguments>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <layout>ZIP</layout>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
